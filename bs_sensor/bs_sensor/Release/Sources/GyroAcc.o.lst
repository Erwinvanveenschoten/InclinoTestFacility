   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "GyroAcc.c"
  16              	 .section .text.bmi055_start,"ax",%progbits
  17              	 .align 1
  18              	 .global bmi055_start
  19              	 .thumb
  20              	 .thumb_func
  22              	bmi055_start:
  23              	 
  24              	 
  25 0000 1448     	 ldr r0,.L5
  26 0002 4368     	 ldr r3,[r0,#4]
  27 0004 1B68     	 ldr r3,[r3]
  28 0006 10B5     	 push {r4,lr}
  29 0008 1968     	 ldr r1,[r3]
  30 000a 134C     	 ldr r4,.L5+4
  31 000c FFF7FEFF 	 bl SPI_MASTER_SetBaudRate
  32 0010 1248     	 ldr r0,.L5+8
  33 0012 0621     	 movs r1,#6
  34 0014 8022     	 movs r2,#128
  35 0016 FFF7FEFF 	 bl XMC_GPIO_SetMode
  36 001a 1148     	 ldr r0,.L5+12
  37 001c 0621     	 movs r1,#6
  38 001e 8022     	 movs r2,#128
  39 0020 FFF7FEFF 	 bl XMC_GPIO_SetMode
  40              	.L2:
  41              	
  42 0024 00BF     	 nop
  43              	
  44              	 .thumb
  45 0026 013C     	 subs r4,r4,#1
  46 0028 FCD1     	 bne .L2
  47 002a 0C4A     	 ldr r2,.L5+8
  48 002c 0948     	 ldr r0,.L5
  49 002e 4023     	 movs r3,#64
  50 0030 5360     	 str r3,[r2,#4]
  51 0032 C2F80433 	 str r3,[r2,#772]
  52 0036 FFF7FEFF 	 bl spi_flushrxbuffer
  53 003a 2146     	 mov r1,r4
  54 003c 0622     	 movs r2,#6
  55 003e 0948     	 ldr r0,.L5+16
  56 0040 FFF7FEFF 	 bl memset
  57 0044 2146     	 mov r1,r4
  58 0046 0848     	 ldr r0,.L5+20
  59 0048 0622     	 movs r2,#6
  60 004a BDE81040 	 pop {r4,lr}
  61 004e FFF7FEBF 	 b memset
  62              	.L6:
  63 0052 00BF     	 .align 2
  64              	.L5:
  65 0054 00000000 	 .word SPI_MASTER_0
  66 0058 20A10700 	 .word 500000
  67 005c 00820248 	 .word 1208123904
  68 0060 00850248 	 .word 1208124672
  69 0064 00000000 	 .word gyroDataRegister
  70 0068 00000000 	 .word accDataRegister
  72              	 .section .text.readAcc,"ax",%progbits
  73              	 .align 1
  74              	 .global readAcc
  75              	 .thumb
  76              	 .thumb_func
  78              	readAcc:
  79              	 
  80              	 
  81 0000 73B5     	 push {r0,r1,r4,r5,r6,lr}
  82 0002 0F4E     	 ldr r6,.L8
  83 0004 0F4D     	 ldr r5,.L8+4
  84 0006 02AC     	 add r4,sp,#8
  85 0008 40F08000 	 orr r0,r0,#128
  86 000c 0002     	 lsls r0,r0,#8
  87 000e 24F8020D 	 strh r0,[r4,#-2]!
  88 0012 0023     	 movs r3,#0
  89 0014 3046     	 mov r0,r6
  90 0016 8DF80530 	 strb r3,[sp,#5]
  91 001a FFF7FEFF 	 bl spi_flushrxbuffer
  92 001e 4FF48003 	 mov r3,#4194304
  93 0022 6B60     	 str r3,[r5,#4]
  94 0024 3046     	 mov r0,r6
  95 0026 2146     	 mov r1,r4
  96 0028 0DF10502 	 add r2,sp,#5
  97 002c 0123     	 movs r3,#1
  98 002e FFF7FEFF 	 bl SPI_MASTER_Transfer
  99 0032 4023     	 movs r3,#64
 100 0034 6B60     	 str r3,[r5,#4]
 101 0036 9DF80500 	 ldrb r0,[sp,#5]
 102 003a 02B0     	 add sp,sp,#8
 103              	 
 104 003c 70BD     	 pop {r4,r5,r6,pc}
 105              	.L9:
 106 003e 00BF     	 .align 2
 107              	.L8:
 108 0040 00000000 	 .word SPI_MASTER_0
 109 0044 00820248 	 .word 1208123904
 111              	 .section .text.readGyro,"ax",%progbits
 112              	 .align 1
 113              	 .global readGyro
 114              	 .thumb
 115              	 .thumb_func
 117              	readGyro:
 118              	 
 119              	 
 120 0000 73B5     	 push {r0,r1,r4,r5,r6,lr}
 121 0002 0D4E     	 ldr r6,.L11
 122 0004 0D4D     	 ldr r5,.L11+4
 123 0006 02AC     	 add r4,sp,#8
 124 0008 40F08000 	 orr r0,r0,#128
 125 000c 0002     	 lsls r0,r0,#8
 126 000e 24F8020D 	 strh r0,[r4,#-2]!
 127 0012 3046     	 mov r0,r6
 128 0014 FFF7FEFF 	 bl spi_flushrxbuffer
 129 0018 4FF48003 	 mov r3,#4194304
 130 001c 6B60     	 str r3,[r5,#4]
 131 001e 3046     	 mov r0,r6
 132 0020 2146     	 mov r1,r4
 133 0022 0DF10502 	 add r2,sp,#5
 134 0026 0123     	 movs r3,#1
 135 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 136 002c 4023     	 movs r3,#64
 137 002e 6B60     	 str r3,[r5,#4]
 138 0030 9DF80500 	 ldrb r0,[sp,#5]
 139 0034 02B0     	 add sp,sp,#8
 140              	 
 141 0036 70BD     	 pop {r4,r5,r6,pc}
 142              	.L12:
 143              	 .align 2
 144              	.L11:
 145 0038 00000000 	 .word SPI_MASTER_0
 146 003c 00850248 	 .word 1208124672
 148              	 .section .text.writeAcc,"ax",%progbits
 149              	 .align 1
 150              	 .global writeAcc
 151              	 .thumb
 152              	 .thumb_func
 154              	writeAcc:
 155              	 
 156              	 
 157 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
 158 0002 0E4C     	 ldr r4,.L14
 159 0004 8DF80700 	 strb r0,[sp,#7]
 160 0008 0D4D     	 ldr r5,.L14+4
 161 000a 8DF80610 	 strb r1,[sp,#6]
 162 000e 2046     	 mov r0,r4
 163 0010 FFF7FEFF 	 bl spi_flushrxbuffer
 164 0014 4FF48003 	 mov r3,#4194304
 165 0018 6B60     	 str r3,[r5,#4]
 166 001a 0DF10701 	 add r1,sp,#7
 167 001e 2046     	 mov r0,r4
 168 0020 0122     	 movs r2,#1
 169 0022 FFF7FEFF 	 bl SPI_MASTER_Transmit
 170 0026 2046     	 mov r0,r4
 171 0028 0DF10601 	 add r1,sp,#6
 172 002c 0122     	 movs r2,#1
 173 002e FFF7FEFF 	 bl SPI_MASTER_Transmit
 174 0032 4023     	 movs r3,#64
 175 0034 6B60     	 str r3,[r5,#4]
 176 0036 03B0     	 add sp,sp,#12
 177              	 
 178 0038 30BD     	 pop {r4,r5,pc}
 179              	.L15:
 180 003a 00BF     	 .align 2
 181              	.L14:
 182 003c 00000000 	 .word SPI_MASTER_0
 183 0040 00820248 	 .word 1208123904
 185              	 .section .text.writeGyro,"ax",%progbits
 186              	 .align 1
 187              	 .global writeGyro
 188              	 .thumb
 189              	 .thumb_func
 191              	writeGyro:
 192              	 
 193              	 
 194 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
 195 0002 0E4C     	 ldr r4,.L17
 196 0004 8DF80700 	 strb r0,[sp,#7]
 197 0008 0D4D     	 ldr r5,.L17+4
 198 000a 8DF80610 	 strb r1,[sp,#6]
 199 000e 2046     	 mov r0,r4
 200 0010 FFF7FEFF 	 bl spi_flushrxbuffer
 201 0014 4FF48003 	 mov r3,#4194304
 202 0018 6B60     	 str r3,[r5,#4]
 203 001a 0DF10701 	 add r1,sp,#7
 204 001e 2046     	 mov r0,r4
 205 0020 0122     	 movs r2,#1
 206 0022 FFF7FEFF 	 bl SPI_MASTER_Transmit
 207 0026 2046     	 mov r0,r4
 208 0028 0DF10601 	 add r1,sp,#6
 209 002c 0122     	 movs r2,#1
 210 002e FFF7FEFF 	 bl SPI_MASTER_Transmit
 211 0032 4023     	 movs r3,#64
 212 0034 6B60     	 str r3,[r5,#4]
 213 0036 03B0     	 add sp,sp,#12
 214              	 
 215 0038 30BD     	 pop {r4,r5,pc}
 216              	.L18:
 217 003a 00BF     	 .align 2
 218              	.L17:
 219 003c 00000000 	 .word SPI_MASTER_0
 220 0040 00850248 	 .word 1208124672
 222              	 .section .text.readGyroData,"ax",%progbits
 223              	 .align 1
 224              	 .global readGyroData
 225              	 .thumb
 226              	 .thumb_func
 228              	readGyroData:
 229              	 
 230              	 
 231 0000 13B5     	 push {r0,r1,r4,lr}
 232 0002 8223     	 movs r3,#130
 233 0004 8DF80630 	 strb r3,[sp,#6]
 234 0008 0F48     	 ldr r0,.L22
 235 000a 104C     	 ldr r4,.L22+4
 236 000c 0023     	 movs r3,#0
 237 000e 8DF80730 	 strb r3,[sp,#7]
 238 0012 FFF7FEFF 	 bl spi_flushrxbuffer
 239 0016 4FF48003 	 mov r3,#4194304
 240 001a 6360     	 str r3,[r4,#4]
 241 001c 0A48     	 ldr r0,.L22
 242 001e 0DF10601 	 add r1,sp,#6
 243 0022 0122     	 movs r2,#1
 244 0024 FFF7FEFF 	 bl SPI_MASTER_Transmit
 245 0028 0A23     	 movs r3,#10
 246              	.L20:
 247              	
 248 002a 00BF     	 nop
 249              	
 250              	 .thumb
 251 002c 013B     	 subs r3,r3,#1
 252 002e FCD1     	 bne .L20
 253 0030 0DF10701 	 add r1,sp,#7
 254 0034 064A     	 ldr r2,.L22+8
 255 0036 0448     	 ldr r0,.L22
 256 0038 0623     	 movs r3,#6
 257 003a FFF7FEFF 	 bl SPI_MASTER_Transfer
 258 003e 4023     	 movs r3,#64
 259 0040 6360     	 str r3,[r4,#4]
 260 0042 02B0     	 add sp,sp,#8
 261              	 
 262 0044 10BD     	 pop {r4,pc}
 263              	.L23:
 264 0046 00BF     	 .align 2
 265              	.L22:
 266 0048 00000000 	 .word SPI_MASTER_0
 267 004c 00850248 	 .word 1208124672
 268 0050 00000000 	 .word gyroDataRegister
 270              	 .section .text.readAccData,"ax",%progbits
 271              	 .align 1
 272              	 .global readAccData
 273              	 .thumb
 274              	 .thumb_func
 276              	readAccData:
 277              	 
 278              	 
 279 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
 280 0002 124C     	 ldr r4,.L25
 281 0004 124D     	 ldr r5,.L25+4
 282 0006 8223     	 movs r3,#130
 283 0008 8DF80630 	 strb r3,[sp,#6]
 284 000c 2046     	 mov r0,r4
 285 000e 0023     	 movs r3,#0
 286 0010 8DF80730 	 strb r3,[sp,#7]
 287 0014 FFF7FEFF 	 bl spi_flushrxbuffer
 288 0018 4FF48003 	 mov r3,#4194304
 289 001c 6B60     	 str r3,[r5,#4]
 290 001e 2046     	 mov r0,r4
 291 0020 0DF10601 	 add r1,sp,#6
 292 0024 0122     	 movs r2,#1
 293 0026 FFF7FEFF 	 bl SPI_MASTER_Transmit
 294              	
 295 002a 00BF     	 nop
 296              	
 297              	
 298 002c 00BF     	 nop
 299              	
 300              	
 301 002e 00BF     	 nop
 302              	
 303              	
 304 0030 00BF     	 nop
 305              	
 306              	
 307 0032 00BF     	 nop
 308              	
 309              	 .thumb
 310 0034 074A     	 ldr r2,.L25+8
 311 0036 2046     	 mov r0,r4
 312 0038 0DF10701 	 add r1,sp,#7
 313 003c 0623     	 movs r3,#6
 314 003e FFF7FEFF 	 bl SPI_MASTER_Transfer
 315 0042 4023     	 movs r3,#64
 316 0044 6B60     	 str r3,[r5,#4]
 317 0046 03B0     	 add sp,sp,#12
 318              	 
 319 0048 30BD     	 pop {r4,r5,pc}
 320              	.L26:
 321 004a 00BF     	 .align 2
 322              	.L25:
 323 004c 00000000 	 .word SPI_MASTER_0
 324 0050 00820248 	 .word 1208123904
 325 0054 00000000 	 .word accDataRegister
 327              	 .comm accDataRegister,6,1
 328              	 .comm gyroDataRegister,6,1
 329              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 GyroAcc.c
    {standard input}:17     .text.bmi055_start:00000000 $t
    {standard input}:22     .text.bmi055_start:00000000 bmi055_start
    {standard input}:65     .text.bmi055_start:00000054 $d
                            *COM*:00000006 gyroDataRegister
                            *COM*:00000006 accDataRegister
    {standard input}:73     .text.readAcc:00000000 $t
    {standard input}:78     .text.readAcc:00000000 readAcc
    {standard input}:108    .text.readAcc:00000040 $d
    {standard input}:112    .text.readGyro:00000000 $t
    {standard input}:117    .text.readGyro:00000000 readGyro
    {standard input}:145    .text.readGyro:00000038 $d
    {standard input}:149    .text.writeAcc:00000000 $t
    {standard input}:154    .text.writeAcc:00000000 writeAcc
    {standard input}:182    .text.writeAcc:0000003c $d
    {standard input}:186    .text.writeGyro:00000000 $t
    {standard input}:191    .text.writeGyro:00000000 writeGyro
    {standard input}:219    .text.writeGyro:0000003c $d
    {standard input}:223    .text.readGyroData:00000000 $t
    {standard input}:228    .text.readGyroData:00000000 readGyroData
    {standard input}:266    .text.readGyroData:00000048 $d
    {standard input}:271    .text.readAccData:00000000 $t
    {standard input}:276    .text.readAccData:00000000 readAccData
    {standard input}:323    .text.readAccData:0000004c $d

UNDEFINED SYMBOLS
SPI_MASTER_SetBaudRate
XMC_GPIO_SetMode
spi_flushrxbuffer
memset
SPI_MASTER_0
SPI_MASTER_Transfer
SPI_MASTER_Transmit
